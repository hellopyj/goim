// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cmd.proto

package gcmd

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RetData struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Summary              string   `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetData) Reset()         { *m = RetData{} }
func (m *RetData) String() string { return proto.CompactTextString(m) }
func (*RetData) ProtoMessage()    {}
func (*RetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{0}
}
func (m *RetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetData.Unmarshal(m, b)
}
func (m *RetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetData.Marshal(b, m, deterministic)
}
func (m *RetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetData.Merge(m, src)
}
func (m *RetData) XXX_Size() int {
	return xxx_messageInfo_RetData.Size(m)
}
func (m *RetData) XXX_DiscardUnknown() {
	xxx_messageInfo_RetData.DiscardUnknown(m)
}

var xxx_messageInfo_RetData proto.InternalMessageInfo

func (m *RetData) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RetData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RetData) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

type CmdReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Roomid               int64    `protobuf:"varint,3,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Command              []byte   `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	Platform             string   `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CmdReq) Reset()         { *m = CmdReq{} }
func (m *CmdReq) String() string { return proto.CompactTextString(m) }
func (*CmdReq) ProtoMessage()    {}
func (*CmdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{1}
}
func (m *CmdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CmdReq.Unmarshal(m, b)
}
func (m *CmdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CmdReq.Marshal(b, m, deterministic)
}
func (m *CmdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CmdReq.Merge(m, src)
}
func (m *CmdReq) XXX_Size() int {
	return xxx_messageInfo_CmdReq.Size(m)
}
func (m *CmdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CmdReq.DiscardUnknown(m)
}

var xxx_messageInfo_CmdReq proto.InternalMessageInfo

func (m *CmdReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CmdReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *CmdReq) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *CmdReq) GetCommand() []byte {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *CmdReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *CmdReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type AuthReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Uid                  int64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Roomid               int64    `protobuf:"varint,3,opt,name=roomid,proto3" json:"roomid,omitempty"`
	Platform             string   `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthReq) Reset()         { *m = AuthReq{} }
func (m *AuthReq) String() string { return proto.CompactTextString(m) }
func (*AuthReq) ProtoMessage()    {}
func (*AuthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7520252fb01eaf30, []int{2}
}
func (m *AuthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthReq.Unmarshal(m, b)
}
func (m *AuthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthReq.Marshal(b, m, deterministic)
}
func (m *AuthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthReq.Merge(m, src)
}
func (m *AuthReq) XXX_Size() int {
	return xxx_messageInfo_AuthReq.Size(m)
}
func (m *AuthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthReq proto.InternalMessageInfo

func (m *AuthReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthReq) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *AuthReq) GetRoomid() int64 {
	if m != nil {
		return m.Roomid
	}
	return 0
}

func (m *AuthReq) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *AuthReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterType((*RetData)(nil), "dpg.cmd.RetData")
	proto.RegisterType((*CmdReq)(nil), "dpg.cmd.CmdReq")
	proto.RegisterType((*AuthReq)(nil), "dpg.cmd.AuthReq")
}

func init() { proto.RegisterFile("cmd.proto", fileDescriptor_7520252fb01eaf30) }

var fileDescriptor_7520252fb01eaf30 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0xc5, 0xe5, 0xcf, 0xf9, 0xf3, 0xe5, 0x0a, 0x89, 0xea, 0x0a, 0x21, 0xab, 0x62, 0x88, 0x32,
	0x45, 0x0c, 0x19, 0xe0, 0x09, 0x20, 0xdd, 0xd8, 0x3c, 0xb2, 0x20, 0x93, 0x6b, 0x4a, 0x44, 0x6f,
	0x1d, 0x52, 0x67, 0x60, 0xe6, 0x35, 0x78, 0x58, 0x14, 0x37, 0x69, 0x11, 0x48, 0x4c, 0x6c, 0xf7,
	0x1c, 0x5b, 0xe7, 0xfe, 0xec, 0x03, 0x59, 0xc3, 0x54, 0x75, 0xbd, 0xf3, 0x0e, 0x53, 0xea, 0xd6,
	0x55, 0xc3, 0x54, 0xdc, 0x41, 0xaa, 0xad, 0x5f, 0x19, 0x6f, 0x10, 0x21, 0x6a, 0x1c, 0x59, 0x25,
	0x72, 0x51, 0x4a, 0x1d, 0xe6, 0xd1, 0x23, 0xe3, 0x8d, 0xfa, 0x97, 0x8b, 0xf2, 0x44, 0x87, 0x19,
	0x15, 0xa4, 0xbb, 0x81, 0xd9, 0xf4, 0x6f, 0x4a, 0xe6, 0xa2, 0xcc, 0xf4, 0x2c, 0x8b, 0x0f, 0x01,
	0x49, 0xcd, 0xa4, 0xed, 0x2b, 0x9e, 0x41, 0xec, 0xdd, 0x8b, 0xdd, 0x86, 0xb4, 0x4c, 0xef, 0x05,
	0x2e, 0x40, 0x0e, 0x2d, 0x85, 0x34, 0xa9, 0xc7, 0x11, 0xcf, 0x21, 0xe9, 0x9d, 0xe3, 0x96, 0x42,
	0x96, 0xd4, 0x93, 0x1a, 0x97, 0x34, 0x8e, 0xd9, 0x6c, 0x49, 0x45, 0x61, 0xf7, 0x2c, 0x71, 0x09,
	0xff, 0xbb, 0x8d, 0xf1, 0x4f, 0xae, 0x67, 0x15, 0x87, 0xf0, 0x83, 0xc6, 0x0b, 0xc8, 0x7c, 0xcb,
	0x76, 0xe7, 0x0d, 0x77, 0x2a, 0x09, 0x81, 0x47, 0xa3, 0x78, 0x17, 0x90, 0xde, 0x0c, 0xfe, 0xf9,
	0x2f, 0xf8, 0xbe, 0x52, 0x44, 0xbf, 0x51, 0xc4, 0xdf, 0x28, 0xae, 0x1e, 0x20, 0xad, 0x99, 0x56,
	0xd6, 0x6c, 0xb0, 0x04, 0x59, 0x33, 0xe1, 0x69, 0x35, 0xb5, 0x51, 0xed, 0x3f, 0x6f, 0xb9, 0x38,
	0x18, 0x73, 0x37, 0x97, 0x10, 0x8d, 0xe4, 0x78, 0x3c, 0x99, 0x1e, 0xf2, 0xf3, 0xee, 0x6d, 0x72,
	0x1f, 0xad, 0x1b, 0xa6, 0xc7, 0x24, 0x54, 0x7d, 0xfd, 0x19, 0x00, 0x00, 0xff, 0xff, 0x84, 0x28,
	0xfa, 0xa4, 0xf7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CmdDealClient is the client API for CmdDeal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CmdDealClient interface {
	Cmd(ctx context.Context, in *CmdReq, opts ...grpc.CallOption) (*RetData, error)
	Auth(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*RetData, error)
}

type cmdDealClient struct {
	cc *grpc.ClientConn
}

func NewCmdDealClient(cc *grpc.ClientConn) CmdDealClient {
	return &cmdDealClient{cc}
}

func (c *cmdDealClient) Cmd(ctx context.Context, in *CmdReq, opts ...grpc.CallOption) (*RetData, error) {
	out := new(RetData)
	err := c.cc.Invoke(ctx, "/dpg.cmd.CmdDeal/Cmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cmdDealClient) Auth(ctx context.Context, in *AuthReq, opts ...grpc.CallOption) (*RetData, error) {
	out := new(RetData)
	err := c.cc.Invoke(ctx, "/dpg.cmd.CmdDeal/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CmdDealServer is the server API for CmdDeal service.
type CmdDealServer interface {
	Cmd(context.Context, *CmdReq) (*RetData, error)
	Auth(context.Context, *AuthReq) (*RetData, error)
}

func RegisterCmdDealServer(s *grpc.Server, srv CmdDealServer) {
	s.RegisterService(&_CmdDeal_serviceDesc, srv)
}

func _CmdDeal_Cmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CmdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdDealServer).Cmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dpg.cmd.CmdDeal/Cmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdDealServer).Cmd(ctx, req.(*CmdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CmdDeal_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CmdDealServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dpg.cmd.CmdDeal/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CmdDealServer).Auth(ctx, req.(*AuthReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CmdDeal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dpg.cmd.CmdDeal",
	HandlerType: (*CmdDealServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Cmd",
			Handler:    _CmdDeal_Cmd_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _CmdDeal_Auth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cmd.proto",
}
